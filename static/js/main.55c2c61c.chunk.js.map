{"version":3,"sources":["redux/counter.js","redux/todo.js","components/todo.js","App.js","redux/store.js","index.js"],"names":["counterSlice","createSlice","name","initialState","value","reducers","increment","state","decrement","incrementByAmount","action","payload","actions","fetchAllTodos","createAsyncThunk","axios","get","then","response","data","catch","error","todoSlice","allTodo","selectedTodo","deleteTodoById","filter","item","id","addTodo","push","selectTodoById","toggleTodoById","map","i","completed","extraReducers","fulfilled","type","Todo","useSelector","todoList","dispatch","useDispatch","useState","setItem","useEffect","Fragment","className","htmlFor","onChange","e","target","onClick","length","UserId","uuidv4","title","flat","App","configureStore","reducer","counter","counterReducer","todoReducer","rootElement","document","getElementById","ReactDOM","render","store"],"mappings":"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","file":"static/js/main.55c2c61c.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = { value: 0 }\n\nconst counterSlice = createSlice({\n  name: 'counter',\n  initialState,\n  reducers: {\n    increment(state) {\n      state.value++\n    },\n    decrement(state) {\n      state.value--\n    },\n    incrementByAmount(state, action) {\n      state.value += action.payload\n    },\n  },\n})\n\n// Action creators are generated for each case reducer function\nexport const { increment, decrement, incrementByAmount } = counterSlice.actions;\n\nexport default counterSlice.reducer;\n","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\nexport const fetchAllTodos = createAsyncThunk(\"app/fetchAppTodo\", () =>\n  axios\n    .get(`https://jsonplaceholder.typicode.com/todos`)\n    .then((response) => response.data)\n    .catch((error) => error)\n);\n\nexport const todoSlice = createSlice({\n  name: \"todos\",\n  initialState: {\n    allTodo: [],\n    selectedTodo: [],\n  },\n  reducers: {\n    deleteTodoById: (state, action) => {\n      if (state.selectedTodo) {\n        state.allTodo = state.allTodo.filter(\n          (item) => item.id != action.payload\n        );\n        state.selectedTodo = [];\n      }\n    },\n    addTodo: (state, action) => {\n      state.allTodo.push(action.payload);\n    },\n    selectTodoById: (state, action) => {\n      state.selectedTodo = state.allTodo.filter(\n        (item) => item.id == action.payload\n      );\n    },\n    toggleTodoById: (state, action) => {\n      state.allTodo = state.allTodo.map((item, i) => {\n        if (item.id == action.payload) {\n          item.completed = !item.completed;\n        }\n        return item;\n      });\n    },\n  },\n  extraReducers: {\n    [fetchAllTodos.fulfilled.type]: (state, action) => {\n      state.allTodo = action.payload;\n    },\n  },\n});\n\nexport const { deleteTodoById, addTodo, selectTodoById, toggleTodoById } =\n  todoSlice.actions;\n\nexport default todoSlice.reducer;\n","import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport \"../styles/todo.scss\";\n// import { addItem, removeItem } from \"../redux/todo\";\nimport {\n  fetchAllTodos,\n  selectTodoById,\n  deleteTodoById,\n  addTodo,\n  toggleTodoById,\n} from \"../redux/todo\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nexport default function Todo() {\n  const { allTodo, selectedTodo } = useSelector((state) => state.todoList);\n  const dispatch = useDispatch();\n  const [item, setItem] = useState(\"\");\n  useEffect(() => {\n    dispatch(fetchAllTodos());\n  }, []);\n  return (\n    <React.Fragment>\n      <div className=\"addTodo\">\n        <label htmlFor=\"todoInputBox\">Add New : </label>\n        <input\n          id=\"todoInputBox\"\n          className=\"inputTodo\"\n          onChange={(e) => setItem(e.target.value)}\n          value={item}\n        />\n\n        <button\n          className=\"actionButton\"\n          onClick={() => {\n            if (item.length > 0) {\n              dispatch(\n                addTodo({\n                  UserId: 1,\n                  id: uuidv4(),\n                  title: item,\n                  completed: false,\n                })\n              );\n              setItem(\"\");\n            }\n          }}\n        >\n          Create\n        </button>\n      </div>\n\n      <div className=\"innerDiv\">\n        <div className=\"todoList\">\n          <h2>All Todos</h2>\n          <div className=\"todoListItem\">\n            {allTodo && allTodo.length > 0\n              ? allTodo.flat().map((item, i) => {\n                  return (\n                    <p\n                      onClick={() => dispatch(selectTodoById(item.id))}\n                      key={item.id}\n                      className={item.completed ? \"completed\" : \"\"}\n                    >\n                      {i + 1}\n                      {\". \"}\n                      {item.title}{\" \"}\n                    </p>\n                  );\n                })\n              : \"loading\"}\n          </div>\n        </div>\n        <div className=\"selectedTodo\">\n          <h2>Selected Todo</h2>\n          {selectedTodo && selectedTodo.length > 0 ? (\n            <h4 className={selectedTodo[0].completed ? \"completed\" : \"\"}>\n              {selectedTodo[0].title}\n            </h4>\n          ) : (\n            \"No todo selected\"\n          )}\n          <button\n            className=\"actionButton selected\"\n            onClick={() => {\n              dispatch(deleteTodoById(selectedTodo[0].id));\n              setItem(\"\");\n            }}\n          >\n            Delete\n          </button>\n          <button\n            className=\"actionButton selected\"\n            onClick={() => dispatch(toggleTodoById(selectedTodo[0].id))}\n          >\n            Toggle\n          </button>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n}\n","import React from \"react\";\nimport Counter from \"./components/counter\";\nimport Todo from \"./components/todo\";\n\n\nexport default function App() {\n  return (\n    <React.Fragment>\n        {/* <Counter /> */}\n        <Todo />\n    </React.Fragment>\n  );\n}\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport counterReducer from \"./counter\";\nimport todoReducer from \"./todo\";\n\nexport default configureStore({\n  reducer: {\n    counter: counterReducer,\n    todoList: todoReducer\n  }\n});\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport App from \"./App\";\nimport store from \"./redux/store\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}